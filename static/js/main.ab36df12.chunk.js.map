{"version":3,"sources":["components/Header/components/LeftButtons.jsx","components/Header/components/RightButtons.jsx","constants.js","hooks/useHover.js","components/Header/components/SearchItem.jsx","components/Header/components/Search.jsx","components/Header/index.jsx","components/Navbar/components/Item.jsx","components/Navbar/components/ItemList.jsx","components/Navbar/index.jsx","components/Video.jsx","pages/Home.jsx","pages/Play.jsx","App.js","serviceWorker.js","index.js"],"names":["LeftButtons","className","style","flex","minWidth","IconButton","color","aria-label","component","Menu","backgroundImage","width","height","backgroundRepeat","backgroundSize","display","verticalAlign","RightButtons","VideoCall","Apps","Notifications","borderRadius","src","alt","baseUrl","useHover","ref","useState","hovered","setHovered","useEffect","refCurrent","current","addEventListener","removeEventListener","Item","name","onClick","item","useRef","padding","backgroundColor","cursor","Search","onSearch","timerId","setTimerId","showSuggestions","setShowSuggestions","searchText","setSearchText","suggestions","setSuggestions","loading","setLoading","inputRef","onSearchSuggestions","text","a","console","log","fetch","raw","json","data","result","onSuggestionClick","suggestion","getBoundingClientRect","left","top","textAlign","onChange","event","clearTimeout","txt","target","value","setTimeout","type","placeholder","list","onFocus","onKeyPress","key","which","CircularProgress","size","fontSize","marginTop","position","maxHeight","overflow","zIndex","map","SearchItem","Header","flexWrap","icon","selected","ItemList","mainItems","Whatshot","Subscriptions","subItems","VideoLibrary","History","WatchLater","Navbar","borderBottom","Video","thumbnail","description","views","title","publishedOn","owner","time","videoId","history","useHistory","margin","url","push","background","float","runs","line","index","bold","fontWeight","useStyles","makeStyles","theme","backdrop","drawer","Home","searchResults","setSearchResults","classes","location","useLocation","search","split","scrollTop","scrollHeight","offsetHeight","Backdrop","open","justifyContent","video","Play","frameborder","allow","allowfullscreen","createMuiTheme","palette","primary","main","grey","secondary","App","StrictMode","ThemeProvider","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ab36df12.chunk.js","sourcesContent":["import { IconButton } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst LeftButtons = () => {\n  return (\n    <div className=\"primary-bg\" style={{ flex: 1, minWidth: 150 }}>\n      <IconButton color=\"primary\" aria-label=\"menu\" component=\"span\">\n        <Menu />\n      </IconButton>\n      <span\n        style={{\n          backgroundImage: \"url('/images/logo.png')\",\n          width: \"100px\",\n          height: \"30px\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"contain\",\n          display: \"inline-block\",\n          verticalAlign: \"middle\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default LeftButtons;\n","import { IconButton } from \"@material-ui/core\";\nimport { VideoCall, Apps, Notifications } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst RightButtons = () => {\n  return (\n    <div className=\"primary-bg\" style={{ flex: 1, minWidth: 200 }}>\n      <IconButton color=\"primary\" aria-label=\"video\" component=\"span\">\n        <VideoCall />\n      </IconButton>\n      <IconButton color=\"primary\" aria-label=\"apps\" component=\"span\">\n        <Apps />\n      </IconButton>\n      <IconButton color=\"primary\" aria-label=\"notification\" component=\"span\">\n        <Notifications />\n      </IconButton>\n      <IconButton color=\"primary\" aria-label=\"notification\" component=\"span\">\n        <img\n          style={{\n            width: \"30px\",\n            borderRadius: \"50%\",\n          }}\n          src=\"/images/avatar.png\"\n          alt=\"avatar\"\n        />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default RightButtons;\n","export const colorTextPrimary = \"white\";\nexport const colorTextSecondary = \"#aaa\";\nexport const colorBgPrimary = \"#212121\";\nexport const colorBgSecondary = \"#191919\";\nexport const colorBgSearch = \"rgb(19, 19, 19)\";\nexport const colorBtnPrimary = \"#323232\";\nexport const colorPrimary = \"white\";\nexport const colorSecondary = \"#aaaaaa\";\n\n// export const baseUrl=\"http://localhost:3030/youtube-clone/\";\nexport const baseUrl=\"https://common-apis.herokuapp.com/youtube-clone/\";","import { useEffect, useState } from 'react'\n\nconst useHover = (ref) => {\n    const [hovered, setHovered] = useState(false);\n    useEffect(() => {\n        const refCurrent = ref.current;\n        if(ref.current){\n            ref.current.addEventListener(\"mouseenter\", ()=>setHovered(true))\n            ref.current.addEventListener(\"mouseleave\", ()=>setHovered(false))\n        }\n        return ()=>{\n            refCurrent.removeEventListener(\"mouseleave\",null, true)\n        }\n    }, [ref])\n\n    return [hovered]\n}\n\nexport default useHover\n","import React, { useRef } from \"react\";\nimport { colorBgPrimary, colorBtnPrimary } from \"../../../constants\";\nimport useHover from \"../../../hooks/useHover\";\n\nconst Item = ({ name, onClick }) => {\n  const item = useRef();\n  const [hovered] = useHover(item);\n  return (\n    <div\n      ref={item}\n      style={{\n        padding: 10,\n        backgroundColor: hovered ? colorBtnPrimary : colorBgPrimary,\n        cursor: \"pointer\",\n      }}\n      onClick={() => onClick(name)}\n    >\n      <span className=\"item-text\">{name}</span>\n    </div>\n  );\n};\n\nexport default Item;\n","import { CircularProgress } from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\nimport { baseUrl, colorBgPrimary } from \"../../../constants\";\nimport \"../Header.css\";\nimport SearchItem from \"./SearchItem\";\n\nconst Search = ({ onSearch }) => {\n  const [timerId, setTimerId] = useState();\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const inputRef = useRef();\n\n  const onSearchSuggestions = async (text) => {\n    console.log(text);\n    setLoading(true);\n    const raw = await fetch(`${baseUrl}/suggestions?search=${searchText}`);\n    const data = await raw.json();\n    setSuggestions(data.result);\n    setShowSuggestions(true);\n    setLoading(false);\n  };\n\n  const onChange = (event) => {\n    clearTimeout(timerId);\n    const txt = event.target.value;\n    setSearchText(txt);\n    setTimerId(\n      setTimeout(() => {\n        if(txt)\n        onSearchSuggestions(txt);\n      }, 500)\n    );\n  };\n  const onSuggestionClick = (suggestion) => {\n    setSearchText(suggestion);\n    onSearch(suggestion);\n    setShowSuggestions(false);\n  };\n  const onInputKeyPress = (key) => {\n    switch (key.which) {\n      case 13:\n        onSearch(searchText);\n        setShowSuggestions(false);\n        break;\n      default:\n        break;\n    }\n  };\n  const { left, top, width } = inputRef.current\n    ? inputRef.current.getBoundingClientRect()\n    : {};\n  return (\n    <>\n      <div className=\"primary-bg\" style={{ flex: 5, textAlign: \"center\" }}>\n        <input\n          ref={inputRef}\n          onChange={onChange}\n          value={searchText}\n          className=\"search-input\"\n          type=\"text\"\n          placeholder=\"Search\"\n          list=\"suggestions\"\n          onFocus={() => setShowSuggestions(true)}\n          onKeyPress={onInputKeyPress}\n        />\n        <span className=\"search-btn\">\n          {!loading ? (\n            <SearchIcon\n              color=\"secondary\"\n              style={{ fontSize: 20, marginTop: 6 }}\n            />\n          ) : (\n            <CircularProgress\n              size={21}\n              style={{ fontSize: 20, marginTop: 5 }}\n            />\n          )}\n        </span>\n      </div>\n\n      {showSuggestions && (\n        <div\n          style={{\n            position: \"absolute\",\n            maxHeight: 400,\n            width,\n            left,\n            top: top + 40,\n            textAlign: \"left\",\n            overflow: \"auto\",\n            backgroundColor: colorBgPrimary,\n            cursor: \"pointer\",\n            zIndex: 999,\n          }}\n        >\n          {suggestions.map((item) => (\n            <SearchItem key={item} name={item} onClick={onSuggestionClick} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport LeftButtons from \"./components/LeftButtons\";\nimport RightButtons from \"./components/RightButtons\";\nimport Search from \"./components/Search\";\n\nconst Header = ({ onSearch, suggestions }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n      }}\n    >\n      <LeftButtons />\n      <Search onSearch={onSearch} suggestions={suggestions}/>\n      <RightButtons />\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useRef } from \"react\";\nimport { colorBgPrimary, colorBtnPrimary } from \"../../../constants\";\nimport useHover from \"../../../hooks/useHover\";\n\nconst Item = ({ icon, name, selected }) => {\n  const item = useRef();\n  const [hovered] = useHover(item);\n  return (\n    <div\n      ref={item}\n      style={{\n        padding: 10,\n        backgroundColor: selected || hovered ? colorBtnPrimary : colorBgPrimary,\n        cursor:\"pointer\"\n      }}\n    >\n      {icon}\n      <span className=\"item-text\">{name}</span>\n    </div>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./Item\";\n\nconst ItemList = ({ list }) => {\n    \n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      {list.map((item) => (\n        <Item key={item.name} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default ItemList;\n","import {\n  Home,\n  Whatshot,\n  Subscriptions,\n  VideoLibrary,\n  History, WatchLater\n} from \"@material-ui/icons\";\nimport React from \"react\";\nimport ItemList from \"./components/ItemList\";\nimport \"./Navbar.css\";\n\nconst mainItems = [\n  { name: \"Home\", icon: <Home className=\"item\" />, selected: true },\n  { name: \"Trending\", icon: <Whatshot className=\"item\" /> },\n  { name: \"Subscriptions\", icon: <Subscriptions className=\"item\" /> },\n];\n\nconst subItems = [\n  { name: \"Library\", icon: <VideoLibrary className=\"item\" /> },\n  { name: \"History\", icon: <History className=\"item\" /> },\n  { name: \"Your Videos\", icon: <Subscriptions className=\"item\" /> },\n  { name: \"Watch Later\", icon: <WatchLater className=\"item\" /> },\n];\n\nconst Navbar = ({ type }) => {\n  if (type === \"normal\") {\n    return (\n      <div style={{ width: 250 }}>\n        <ItemList list={mainItems} />\n        <div style={{ borderBottom: \"1px solid #383838\" }} />\n        <ItemList list={subItems} />\n      </div>\n    );\n  }\n  return <div style={{ width: 50 }}>This is Small</div>;\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { colorTextSecondary, colorTextPrimary } from \"../constants\";\n\nconst Video = ({\n  thumbnail,\n  description,\n  views,\n  title,\n  publishedOn,\n  owner,\n  time,\n  videoId,\n}) => {\n  const history = useHistory();\n  return (\n    <div\n      style={{\n        width: \"32%\",\n        margin: \"15px 0\",\n        padding: 5,\n        color: colorTextSecondary,\n      }}\n    >\n      <img\n        width=\"100%\"\n        src={thumbnail.url}\n        alt=\"video\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => history.push(`/youtube/play?videoId=${videoId}`)}\n      />\n      <div\n        style={{\n          position: \"relative\",\n          top: \"-44px\",\n          display: \"inline-block\",\n          padding: \"4px 6px\",\n          borderRadius: \"3px\",\n          background: \"black\",\n          color: \"white\",\n          float: \"right\",\n          margin: \"10px\",\n          fontSize: 12,\n        }}\n      >\n        <b>{time}</b>\n      </div>\n      {/* Title */}\n      {title && (\n        <div key=\"title\" style={{ color: colorTextPrimary, marginTop: 10 }}>\n          {title.runs.map((line) => (\n            <span key={line.text}>{line.text}</span>\n          ))}\n        </div>\n      )}\n      <div style={{ fontSize: 14 }}>\n        <b>{owner}</b>\n        <br />\n        <span>{views}</span>\n        {\" • \"}\n        <span>{publishedOn}</span>\n      </div>\n      {/* Description */}\n      {description && (\n        <div key=\"description\" style={{ fontSize: 12, marginTop: 5 }}>\n          {description.runs.map((line, index) => {\n            if (line.bold)\n              return (\n                <span key={line.text + index} style={{ fontWeight: \"bold\" }}>\n                  {line.text}\n                </span>\n              );\n            return <span key={line.text + index}>{line.text}</span>;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Navbar from \"../components/Navbar\";\nimport Video from \"../components/Video\";\nimport { baseUrl, colorBgSecondary } from \"../constants\";\nimport \"./Home.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst Home = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchText, setSearchText] = useState();\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles();\n  const list = useRef();\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!searchText) return;\n    (async () => {\n      setLoading(true);\n      const raw = await fetch(\n        `${baseUrl}/search?search=${searchText}`\n      );\n      const data = await raw.json();\n      setSearchResults(data.result);\n      setLoading(false);\n    })();\n  }, [searchText]);\n\n  useEffect(() => {\n    setSearchText(location.search.split(\"searchText=\")[1] || 'react.js');\n  }, [location]);\n\n  useEffect(() => {\n    if (!list.current) return;\n    list.current.addEventListener(\n      \"scroll\",\n      function () {\n        var scrollTop = list.current.scrollTop;\n        var scrollHeight = list.current.scrollHeight; // added\n        var offsetHeight = list.current.offsetHeight;\n        // var clientHeight = list.current.clientHeight;\n        var contentHeight = scrollHeight - offsetHeight; // added\n        if (contentHeight <= scrollTop) {\n          // modified\n          // Now this is called when scroll end!\n          console.log(\"Scroll End\");\n        }\n      },\n      false\n    );\n  }, []);\n\n  return (\n    <>\n      <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Header onSearch={(txt) => history.push(`/?searchText=${txt}`)} />\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        <div className=\"nav-bar-normal\">\n          <Navbar type=\"normal\" />\n        </div>\n        <div className=\"nav-bar-minimal\">\n          <Navbar type=\"minimal\" />\n        </div>\n        <div\n          ref={list}\n          style={{\n            flex: 1,\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"flex-start\",\n            height: \"calc(100vh - 55px)\",\n            overflow: \"auto\",\n            padding: \"0 20px\",\n            backgroundColor: colorBgSecondary,\n          }}\n        >\n          {searchResults.map((video) => {\n            return <Video key={video.videoId} {...video} />;\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Play = () => {\n  const history = useHistory();\n  console.log(\"history\", history);\n  let videoId = history.location.search.split(\"videoId=\");\n  if (videoId[1]) {\n    videoId = videoId[1];\n  } else {\n    videoId = \"NA\";\n  }\n  return (\n    <div style={{ width: \"100%\", height: \"100vh\" }}>\n      <iframe\n        title=\"video\"\n        width=\"100%\"\n        height=\"100%\"\n        src={`https://www.youtube.com/embed/${videoId}`}\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen\n      ></iframe>\n    </div>\n  );\n};\n\nexport default Play;\n","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport Play from \"./pages/Play\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[100],\n    },\n    secondary: {\n      main: grey[500],\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <React.StrictMode>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/youtube\">\n              <Home />\n            </Route>\n            <Route path=\"/youtube/play\">\n              <Play />\n            </Route>\n            <Route exact path=\"*\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}